<Window
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:Themes="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Classic" mc:Ignorable="d" x:Class="Pingo.MainWindow"
        Title="Pingo - Idle" MinHeight="429" MinWidth="670" Height="429" Width="670" Icon="/Resources\icon.ico" Loaded="MainWindow_Loaded" WindowStyle="None" ResizeMode="CanResizeWithGrip" AllowsTransparency="True" MouseLeftButtonDown="Window_MouseLeftButtonDown" BorderThickness="2" >

    <Window.Resources>
        <DataTemplate x:Key="HeaderTemplateArrowUp">
            <DockPanel LastChildFill="True" Width="{Binding ActualWidth, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type GridViewColumnHeader}}}">
                <Path x:Name="arrowUp" StrokeThickness="1" Fill="Gray" Data="M 5,10 L 15,10 L 10,5 L 5,10" DockPanel.Dock="Right" Width="20" HorizontalAlignment="Right" Margin="5,0,5,0" SnapsToDevicePixels="True"/>
                <TextBlock Text="{Binding }" />
            </DockPanel>
        </DataTemplate>

        <DataTemplate x:Key="HeaderTemplateArrowDown">
            <DockPanel LastChildFill="True" Width="{Binding ActualWidth, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type GridViewColumnHeader}}}">
                <Path x:Name="arrowDown" StrokeThickness="1" Fill="Gray"  Data="M 5,5 L 10,10 L 15,5 L 5,5" DockPanel.Dock="Right" Width="20" HorizontalAlignment="Right" Margin="5,0,5,0" SnapsToDevicePixels="True"/>
                <TextBlock Text="{Binding }" />
            </DockPanel>
        </DataTemplate>
        
        <!-- Theme colors -->
        <SolidColorBrush x:Key="AccentColor" Color="#BAB6A8" />
        <SolidColorBrush x:Key="DarkAccent" Color="#9C988D" />
        <SolidColorBrush x:Key="MouseOverColor" Color="#8F8B81" />
        <SolidColorBrush x:Key="PressedColor" Color="#75736A" />
        <SolidColorBrush x:Key="PingoRed" Color="#FF1400" />
        <SolidColorBrush x:Key="PingoMouseOverRed" Color="#D61100" />
        <SolidColorBrush x:Key="PingoPressedRed" Color="#BF0F00" />
        <SolidColorBrush x:Key="PingoGreen" Color="#33F200" />
        <SolidColorBrush x:Key="PingoMouseOverGreen" Color="#2DD400" />
        <SolidColorBrush x:Key="PingoPressedGreen" Color="#28BF00" />
        <SolidColorBrush x:Key="PingoGray" Color="#B6BCBF" />
        <SolidColorBrush x:Key="PingoMouseOverGray" Color="#97A2A8" />
        <SolidColorBrush x:Key="PingoPressedGray" Color="#888C8F" />

        <!-- GridView colors -->
        <SolidColorBrush x:Key="GridViewColumnHeaderHoverBackground" Color="{Binding Source={StaticResource MouseOverColor}, Path=Color}" />
        <SolidColorBrush x:Key="GridViewColumnHeaderPressBackground" Color="{Binding Source={StaticResource PressedColor}, Path=Color}" />
        <SolidColorBrush x:Key="GridViewColumnHeaderBorderBackground" />
        <SolidColorBrush x:Key="GridViewColumnHeaderBackground" />

        <Style x:Key="GridViewColumnHeaderGripper"
           TargetType="{x:Type Thumb}">
            <Setter Property="Canvas.Right"
                Value="-9"/>
            <Setter Property="Width"
                Value="18"/>
            <Setter Property="Height"
                Value="{Binding Path=ActualHeight,RelativeSource={RelativeSource TemplatedParent}}"/>
            <Setter Property="Padding"
                Value="0"/>
            <Setter Property="Background" Value="{StaticResource GridViewColumnHeaderBorderBackground}"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Thumb}">
                        <Border Padding="{TemplateBinding Padding}"
                            Background="Transparent">
                            <Rectangle HorizontalAlignment="Center"
                                   Width="1"
                                   Fill="{TemplateBinding Background}"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="FocusVisual">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Rectangle Margin="2" SnapsToDevicePixels="true" Stroke="{StaticResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="FlatProgressBarStyle" TargetType="{x:Type ProgressBar}">
            <Setter Property="Background" Value="{StaticResource {x:Static SystemColors.ControlBrushKey}}"/>
            <Setter Property="Foreground" Value="{StaticResource {x:Static SystemColors.HighlightBrushKey}}"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ProgressBar}">
                        <Themes:ClassicBorderDecorator x:Name="TemplateRoot" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" BorderStyle="None" Background="{TemplateBinding Background}">
                            <DockPanel x:Name="PART_Track" LastChildFill="False" Margin="0,0,0,0">
                                <Rectangle x:Name="PART_Indicator" Width="192" Fill="{StaticResource PingoGreen}" />
                            </DockPanel>
                        </Themes:ClassicBorderDecorator>
                        <ControlTemplate.Triggers>
                            <Trigger Property="Orientation" Value="Vertical">
                                <Setter Property="LayoutTransform" TargetName="TemplateRoot">
                                    <Setter.Value>
                                        <RotateTransform Angle="-90"/>
                                    </Setter.Value>
                                </Setter>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="FlatButtonStyle" TargetType="{x:Type Button}">
            <Setter Property="Foreground" Value="{StaticResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="Padding" Value="2"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="BorderBrush" Value="Transparent"/>
            <Setter Property="HorizontalAlignment" Value="Center"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="Bd" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}" SnapsToDevicePixels="True">
                            <ContentPresenter ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="BorderBrush" TargetName="Bd" Value="{StaticResource MouseOverColor}"/>
                                <Setter Property="Background" TargetName="Bd" Value="{StaticResource MouseOverColor}"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter Property="BorderBrush" TargetName="Bd" Value="{StaticResource PressedColor}"/>
                                <Setter Property="Background" TargetName="Bd" Value="{StaticResource PressedColor}"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="Foreground" Value="{StaticResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="FlatRepeatButtonStyle" TargetType="{x:Type RepeatButton}">
            <Setter Property="Foreground" Value="{StaticResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="Padding" Value="2"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="BorderBrush" Value="Transparent"/>
            <Setter Property="HorizontalAlignment" Value="Center"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type RepeatButton}">
                        <Border x:Name="Bd" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}" SnapsToDevicePixels="True">
                            <ContentPresenter ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="Foreground" Value="{StaticResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="ExitButtonStyle" TargetType="{x:Type Button}">
            <Setter Property="Foreground" Value="{StaticResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="Padding" Value="2"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="BorderBrush" Value="Transparent"/>
            <Setter Property="HorizontalAlignment" Value="Center"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="Bd" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}" SnapsToDevicePixels="True">
                            <ContentPresenter ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="BorderBrush" TargetName="Bd" Value="{StaticResource PingoRed}"/>
                                <Setter Property="Background" TargetName="Bd" Value="{StaticResource PingoRed}"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter Property="BorderBrush" TargetName="Bd" Value="{StaticResource PingoMouseOverRed}"/>
                                <Setter Property="Background" TargetName="Bd" Value="{StaticResource PingoMouseOverRed}"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="Foreground" Value="{StaticResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="EnterButtonStyle" TargetType="{x:Type Button}">
            <Setter Property="Foreground" Value="{StaticResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="Padding" Value="2"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="BorderBrush" Value="Transparent"/>
            <Setter Property="HorizontalAlignment" Value="Center"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="Bd" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}" SnapsToDevicePixels="True">
                            <ContentPresenter ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="BorderBrush" TargetName="Bd" Value="{StaticResource PingoGreen}"/>
                                <Setter Property="Background" TargetName="Bd" Value="{StaticResource PingoGreen}"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter Property="BorderBrush" TargetName="Bd" Value="{StaticResource PingoMouseOverGreen}"/>
                                <Setter Property="Background" TargetName="Bd" Value="{StaticResource PingoMouseOverGreen}"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="Foreground" Value="{StaticResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </Window.Resources>

    <!-- Windows 7/8 taskbar progress -->
    <Window.TaskbarItemInfo>
        <TaskbarItemInfo ProgressValue="0" ProgressState="None"/>
    </Window.TaskbarItemInfo>

    <!-- Custom WindowChrome for borderless window -->
    <WindowChrome.WindowChrome>
        <WindowChrome CaptionHeight="34" GlassFrameThickness="0" ResizeBorderThickness="7"/>
    </WindowChrome.WindowChrome>

    <Border>

        <!-- DropShadow -->
        <Border.Effect>
            <DropShadowEffect BlurRadius="3" Color="Black" Opacity="0.7" ShadowDepth="0.9" />
        </Border.Effect>

        <Grid Background="White">

            <!-- SideBar -->
            <Rectangle Fill="{StaticResource AccentColor}" HorizontalAlignment="Right" Width="93"/>

            <!-- Output ListView -->
            <ListView x:Name="lsvOutput" Margin="10,79,104,77" Grid.IsSharedSizeScope="True" FontSize="14" SelectionMode="Extended" Background="{StaticResource AccentColor}" Foreground="Black" BorderThickness="0" Focusable="False" GridViewColumnHeader.Click="GridViewColumnHeader_Click" >
                <ListView.Resources>
                    <Style TargetType="{x:Type GridViewColumnHeader}">
                        <Setter Property="HorizontalContentAlignment" Value="Left" />
                        <Setter Property="BorderBrush" Value="Transparent" />
                        <Setter Property="Background" Value="{StaticResource AccentColor}" />
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="{x:Type GridViewColumnHeader}">
                                    <Grid SnapsToDevicePixels="true">
                                        <Border Name="HeaderBorder" BorderThickness="0,1,0,1" BorderBrush="{TemplateBinding BorderBrush}" Background="{TemplateBinding Background}">
                                            <Grid>
                                                <Grid.RowDefinitions>
                                                    <RowDefinition MaxHeight="7"/>
                                                    <RowDefinition/>
                                                </Grid.RowDefinitions>
                                                <Grid.ColumnDefinitions>
                                                    <ColumnDefinition Width="10*" SharedSizeGroup="col0"/>
                                                    <ColumnDefinition Width="10*" SharedSizeGroup="col1"/>
                                                    <ColumnDefinition Width="10*" SharedSizeGroup="col2"/>
                                                </Grid.ColumnDefinitions>
                                                <Border Grid.RowSpan="2" Padding="{TemplateBinding Padding}">
                                                    <ContentPresenter Name="HeaderContent"
                                                      Margin="0,0,0,1"
                                                      VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                                      HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                      RecognizesAccessKey="True"
                                                      SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                                </Border>
                                            </Grid>
                                        </Border>
                                        <Border Name="HeaderHoverBorder" BorderThickness="1,0,1,1" Margin="1,1,0,0"/>
                                        <Border Name="HeaderPressBorder" BorderThickness="1,1,1,0" Margin="1,0,0,1"/>
                                        <Canvas>
                                            <Thumb x:Name="PART_HeaderGripper" Style="{StaticResource GridViewColumnHeaderGripper}"/>
                                        </Canvas>
                                    </Grid>
                                    <ControlTemplate.Triggers>
                                        <Trigger Property="IsMouseOver" Value="true">
                                            <Setter TargetName="HeaderBorder" Property="Background" Value="{StaticResource GridViewColumnHeaderHoverBackground}"/>
                                            <Setter TargetName="HeaderHoverBorder" Property="BorderBrush" Value="Transparent"/>
                                            <Setter TargetName="PART_HeaderGripper" Property="Background" Value="Transparent"/>
                                        </Trigger>
                                        <Trigger Property="IsPressed" Value="true">
                                            <Setter TargetName="HeaderBorder" Property="Background" Value="{StaticResource GridViewColumnHeaderPressBackground}"/>
                                            <Setter TargetName="HeaderHoverBorder" Property="BorderBrush" Value="Transparent"/>
                                            <Setter TargetName="HeaderPressBorder" Property="BorderBrush" Value="Transparent"/>
                                            <Setter TargetName="PART_HeaderGripper" Property="Visibility" Value="Hidden"/>
                                            <Setter TargetName="HeaderContent" Property="Margin" Value="1,1,0,0"/>
                                        </Trigger>
                                        <Trigger Property="Height" Value="Auto">
                                            <Setter Property="MinHeight" Value="20"/>
                                        </Trigger>
                                    </ControlTemplate.Triggers>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>
                    <Style TargetType="{x:Type ScrollBar}">
                        <Setter Property="Foreground" Value="{StaticResource DarkAccent}" />
                        <Setter Property="Background" Value="{StaticResource AccentColor}" />
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="{x:Type ScrollBar}">
                                    <Grid x:Name="GridRoot" Width="10" Background="{TemplateBinding Background}">
                                        <Grid.RowDefinitions>
                                            <RowDefinition Height="0.00001*" />
                                        </Grid.RowDefinitions>
                                        <Track x:Name="PART_Track" Grid.Row="0" IsDirectionReversed="true" Focusable="false">
                                            <Track.Thumb>
                                                <Thumb x:Name="Thumb" Background="{TemplateBinding Foreground}" Style="{DynamicResource ScrollThumbs}" />
                                            </Track.Thumb>
                                            <Track.IncreaseRepeatButton>
                                                <RepeatButton x:Name="PageUp" Command="ScrollBar.PageDownCommand" Opacity="0" Focusable="false" />
                                            </Track.IncreaseRepeatButton>
                                            <Track.DecreaseRepeatButton>
                                                <RepeatButton x:Name="PageDown" Command="ScrollBar.PageUpCommand" Opacity="0" Focusable="false" />
                                            </Track.DecreaseRepeatButton>
                                        </Track>
                                    </Grid>
                                    <ControlTemplate.Triggers>
                                        <Trigger SourceName="Thumb" Property="IsMouseOver" Value="true">
                                            <Setter Value="{StaticResource MouseOverColor}" TargetName="Thumb" Property="Background" />
                                        </Trigger>
                                        <Trigger SourceName="Thumb" Property="IsDragging" Value="true">
                                            <Setter Value="{StaticResource PressedColor}" TargetName="Thumb" Property="Background" />
                                        </Trigger>
                                        <Trigger Property="Name" Value="PART_VerticalScrollBar">
                                            <Setter Property="Margin" Value="0,23,0,0"/>
                                        </Trigger>
                                        <Trigger Property="IsEnabled" Value="false">
                                            <Setter TargetName="Thumb" Property="Visibility" Value="Collapsed" />
                                        </Trigger>
                                        <Trigger Property="Orientation" Value="Horizontal">
                                            <Setter TargetName="GridRoot" Property="LayoutTransform">
                                                <Setter.Value>
                                                    <RotateTransform Angle="-90" />
                                                </Setter.Value>
                                            </Setter>
                                            <Setter TargetName="PART_Track" Property="LayoutTransform">
                                                <Setter.Value>
                                                    <RotateTransform Angle="-90" />
                                                </Setter.Value>
                                            </Setter>
                                            <Setter Property="Width" Value="Auto" />
                                            <Setter Property="Height" Value="Auto" />
                                            <Setter TargetName="Thumb" Property="Tag" Value="Horizontal" />
                                            <Setter TargetName="PageDown" Property="Command" Value="ScrollBar.PageLeftCommand" />
                                            <Setter TargetName="PageUp" Property="Command" Value="ScrollBar.PageRightCommand" />
                                        </Trigger>
                                    </ControlTemplate.Triggers>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>
                    <Style TargetType="{x:Type Thumb}">
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="{x:Type Thumb}">
                                    <Grid x:Name="Grid">
                                        <Rectangle HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Width="Auto" Height="Auto" Fill="Transparent" />
                                        <Border x:Name="Rectangle1" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Width="Auto" Height="Auto"  Background="{TemplateBinding Background}" />
                                    </Grid>
                                    <ControlTemplate.Triggers>
                                        <Trigger Property="Tag" Value="Horizontal">
                                            <Setter TargetName="Rectangle1" Property="Width" Value="Auto" />
                                            <Setter TargetName="Rectangle1" Property="Height" Value="7" />
                                        </Trigger>
                                    </ControlTemplate.Triggers>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>
                </ListView.Resources>
                <ListView.View>
                    <GridView>
                        <GridViewColumn Width="150" DisplayMemberBinding="{Binding Hostname}" Header="   Hostname" />
                        <GridViewColumn Width="150" DisplayMemberBinding="{Binding Status}" Header="   Status" />
                        <GridViewColumn Width="170" DisplayMemberBinding="{Binding Timestamp}" Header="   Last Updated" />
                    </GridView>
                </ListView.View>
                <ListView.ItemContainerStyle>
                    <Style TargetType="{x:Type ListBoxItem}">
                        <EventSetter Event="MouseDoubleClick" Handler="lsvOutput_MouseDoubleClick" />
                        <Setter Property="ListView.SnapsToDevicePixels" Value="True" />
                        <Setter Property="ListView.Padding" Value="4,1" />
                        <Setter Property="ListView.HorizontalContentAlignment" Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
                        <Setter Property="ListView.VerticalContentAlignment" Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
                        <Setter Property="ListView.Background" Value="Transparent" />
                        <Setter Property="ListView.BorderBrush" Value="Transparent" />
                        <Setter Property="ListView.BorderThickness" Value="1" />
                        <Setter Property="ListView.FocusVisualStyle" Value="{StaticResource FocusVisual}" />
                        <Setter Property="ListView.Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="{x:Type ListBoxItem}">
                                    <Border x:Name="Bd" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}" SnapsToDevicePixels="true" >
                                        <GridViewRowPresenter VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                                    </Border>
                                    <ControlTemplate.Triggers>

                                        <!-- If host online -->
                                        <MultiDataTrigger>
                                            <MultiDataTrigger.Conditions>
                                                <Condition Binding="{Binding Status}" Value="Online" />
                                                <Condition Binding="{Binding RelativeSource={RelativeSource Mode=Self},  Path=IsSelected}" Value="False"/>
                                            </MultiDataTrigger.Conditions>
                                            <Setter TargetName="Bd" Property="Background" Value="{StaticResource PingoGreen}" />
                                            <Setter TargetName="Bd" Property="BorderBrush" Value="Transparent" />
                                        </MultiDataTrigger>
                                        <MultiDataTrigger>
                                            <MultiDataTrigger.Conditions>
                                                <Condition Binding="{Binding Status}" Value="Online" />
                                                <Condition Binding="{Binding RelativeSource={RelativeSource Mode=Self},  Path=IsMouseOver}" Value="True"/>
                                            </MultiDataTrigger.Conditions>
                                            <Setter TargetName="Bd" Property="Background" Value="{StaticResource PingoMouseOverGreen}" />
                                            <Setter TargetName="Bd" Property="BorderBrush" Value="Transparent" />
                                        </MultiDataTrigger>
                                        <MultiDataTrigger>
                                            <MultiDataTrigger.Conditions>
                                                <Condition Binding="{Binding Status}" Value="Online" />
                                                <Condition Binding="{Binding RelativeSource={RelativeSource Mode=Self},  Path=IsSelected}" Value="True"/>
                                            </MultiDataTrigger.Conditions>
                                            <Setter TargetName="Bd" Property="Background" Value="{StaticResource PingoPressedGreen}" />
                                            <Setter TargetName="Bd" Property="BorderBrush" Value="Transparent" />
                                        </MultiDataTrigger>

                                        <!-- If host offline -->
                                        <MultiDataTrigger>
                                            <MultiDataTrigger.Conditions>
                                                <Condition Binding="{Binding Status}" Value="Offline" />
                                                <Condition Binding="{Binding RelativeSource={RelativeSource Mode=Self},  Path=IsSelected}" Value="False"/>
                                            </MultiDataTrigger.Conditions>
                                            <Setter TargetName="Bd" Property="Background" Value="{StaticResource PingoRed}" />
                                            <Setter TargetName="Bd" Property="BorderBrush" Value="Transparent" />
                                        </MultiDataTrigger>
                                        <MultiDataTrigger>
                                            <MultiDataTrigger.Conditions>
                                                <Condition Binding="{Binding Status}" Value="Offline" />
                                                <Condition Binding="{Binding RelativeSource={RelativeSource Mode=Self},  Path=IsMouseOver}" Value="True"/>
                                            </MultiDataTrigger.Conditions>
                                            <Setter TargetName="Bd" Property="Background" Value="{StaticResource PingoMouseOverRed}" />
                                            <Setter TargetName="Bd" Property="BorderBrush" Value="Transparent" />
                                        </MultiDataTrigger>
                                        <MultiDataTrigger>
                                            <MultiDataTrigger.Conditions>
                                                <Condition Binding="{Binding Status}" Value="Offline" />
                                                <Condition Binding="{Binding RelativeSource={RelativeSource Mode=Self},  Path=IsSelected}" Value="True"/>
                                            </MultiDataTrigger.Conditions>
                                            <Setter TargetName="Bd" Property="Background" Value="{StaticResource PingoPressedRed}" />
                                            <Setter TargetName="Bd" Property="BorderBrush" Value="Transparent" />
                                        </MultiDataTrigger>

                                        <!-- If host unreachable -->
                                        <MultiDataTrigger>
                                            <MultiDataTrigger.Conditions>
                                                <Condition Binding="{Binding Status}" Value="Unreachable" />
                                                <Condition Binding="{Binding RelativeSource={RelativeSource Mode=Self},  Path=IsSelected}" Value="False"/>
                                            </MultiDataTrigger.Conditions>
                                            <Setter TargetName="Bd" Property="Background" Value="{StaticResource PingoGray}" />
                                            <Setter TargetName="Bd" Property="BorderBrush" Value="Transparent" />
                                        </MultiDataTrigger>
                                        <MultiDataTrigger>
                                            <MultiDataTrigger.Conditions>
                                                <Condition Binding="{Binding Status}" Value="Unreachable" />
                                                <Condition Binding="{Binding RelativeSource={RelativeSource Mode=Self},  Path=IsMouseOver}" Value="True"/>
                                            </MultiDataTrigger.Conditions>
                                            <Setter TargetName="Bd" Property="Background" Value="{StaticResource PingoMouseOverGray}" />
                                            <Setter TargetName="Bd" Property="BorderBrush" Value="Transparent" />
                                        </MultiDataTrigger>
                                        <MultiDataTrigger>
                                            <MultiDataTrigger.Conditions>
                                                <Condition Binding="{Binding Status}" Value="Unreachable" />
                                                <Condition Binding="{Binding RelativeSource={RelativeSource Mode=Self},  Path=IsSelected}" Value="True"/>
                                            </MultiDataTrigger.Conditions>
                                            <Setter TargetName="Bd" Property="Background" Value="{StaticResource PingoPressedGray}" />
                                            <Setter TargetName="Bd" Property="BorderBrush" Value="Transparent" />
                                        </MultiDataTrigger>
                                    </ControlTemplate.Triggers>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>
                </ListView.ItemContainerStyle>
            </ListView>

            <!-- Input TextBox -->
            <TextBox x:Name="txtInput" SelectionBrush="{StaticResource PressedColor}" BorderThickness="0" TextWrapping="Wrap" Text="Enter a hostname or IP address" VerticalAlignment="Bottom" Margin="10,0,104,10" Height="53" AcceptsReturn="True" FontSize="14" Background="{StaticResource AccentColor}" Foreground="Black" SnapsToDevicePixels="True" FontFamily="Segoe UI"/>

            <!-- Sidebar buttons -->
            <Button x:Name="btnEnter" VerticalAlignment="Bottom" Height="63" Click="btnEnter_Click" IsDefault="True" FontSize="14" HorizontalAlignment="Right" Width="93" Background="{StaticResource AccentColor}" Foreground="Black" Style="{StaticResource EnterButtonStyle}" Focusable="False" Margin="0,0,0,0">
                <TextBlock SnapsToDevicePixels="True" TextWrapping="Wrap" TextAlignment="Center"><Run Text="Enter"/></TextBlock>
            </Button>

            <Button x:Name="btnRefreshAll" Style="{StaticResource FlatButtonStyle}" Margin="0,0,0,236" Click="btnRefreshAll_Click" FontSize="14" HorizontalAlignment="Right" Width="93" Height="55" VerticalAlignment="Bottom" Background="{StaticResource AccentColor}" Foreground="Black" Focusable="False">
                <TextBlock SnapsToDevicePixels="True" TextWrapping="Wrap" TextAlignment="Center"><Run Text="Refresh All"/></TextBlock>
            </Button>

            <Button x:Name="btnRefreshSelected" Focusable="False" Style="{StaticResource FlatButtonStyle}" Margin="0,0,0,291" Click="btnRefreshSelection_Click" FontSize="14" HorizontalAlignment="Right" Width="93" Height="55" VerticalAlignment="Bottom" Background="{StaticResource AccentColor}" Foreground="Black">
                <TextBlock SnapsToDevicePixels="True" TextWrapping="Wrap" TextAlignment="Center"><Run Text="Refresh Selection"/></TextBlock>
            </Button>

            <Button x:Name="btnExport" VerticalAlignment="Bottom" Margin="0,0,0,77" Height="53" Style="{StaticResource FlatButtonStyle}" FontSize="14" Click="btnExport_Click" HorizontalAlignment="Right" Width="93" Background="{StaticResource AccentColor}" Foreground="Black" Focusable="False">
                <TextBlock SnapsToDevicePixels="True" TextWrapping="Wrap" TextAlignment="Center"><Run Text="Export to CSV"/></TextBlock>
            </Button>

            <Button x:Name="btnDeleteSelected" Style="{StaticResource FlatButtonStyle}" VerticalAlignment="Bottom" Margin="0,0,0,184" Height="52" Click="btnDeleteSelection_Click" FontSize="14" HorizontalAlignment="Right" Width="93" Background="{StaticResource AccentColor}" Foreground="Black" Focusable="False">
                <TextBlock SnapsToDevicePixels="True" TextWrapping="Wrap" TextAlignment="Center"><Run Text="Delete Selection"/></TextBlock>
            </Button>

            <Button x:Name="btnDeleteAll" Style="{StaticResource FlatButtonStyle}" VerticalAlignment="Bottom" Margin="0,0,0,130" Height="54" Click="btnDeleteAll_Click" FontSize="14" HorizontalAlignment="Right" Width="93" Background="{StaticResource AccentColor}" Foreground="Black" Focusable="False">
                <TextBlock SnapsToDevicePixels="True" TextWrapping="Wrap" TextAlignment="Center"><Run Text="Delete All"/></TextBlock>
            </Button>

            <!-- Polling info -->
            <Label Content="Polling interval in minutes:" HorizontalAlignment="Left" Margin="10,43,0,0" FontSize="14" Height="29" VerticalAlignment="Top" SnapsToDevicePixels="True"/>
            <TextBox x:Name="txtInterval" Focusable="False" HorizontalAlignment="Left" BorderThickness="0" Margin="190,47,0,0" TextWrapping="Wrap" Text="10" Width="30" TextChanged="txtInterval_TextChanged" IsReadOnly="True" FontSize="14" Height="26" VerticalAlignment="Top" Background="Transparent" Foreground="Black" Cursor="Arrow"/>
            <Label x:Name="lblNextUpdate" Content="Next update in" HorizontalAlignment="Left" RenderTransformOrigin="0.864,0.952" Margin="372,43,0,0" FontSize="14" Height="29" VerticalAlignment="Top" SnapsToDevicePixels="True"/>

            <!-- Polling control buttons -->
            <RepeatButton x:Name="btnMinus" SnapsToDevicePixels="True" Style="{StaticResource FlatRepeatButtonStyle}" Content="&#xE011;" FontFamily="Segoe UI Symbol" FontSize="10" HorizontalAlignment="Left" Width="15" Margin="209,52,0,0" Click="btnMinus_Click" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" Height="16" VerticalAlignment="Top" BorderBrush="Transparent" Background="Transparent" Focusable="False"/>
            <RepeatButton x:Name="btnPlus" SnapsToDevicePixels="True" Style="{StaticResource FlatRepeatButtonStyle}" Content="&#xE010;" FontFamily="Segoe UI Symbol" FontSize="10" HorizontalAlignment="Left" Width="15" Margin="209,42,0,0" Click="btnPlus_Click" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" Height="16" VerticalAlignment="Top" BorderBrush="Transparent" Background="Transparent" Focusable="False"/>
            <Button x:Name="btnTogglePolling" Content="Disable Polling" HorizontalAlignment="Left" Width="125" Margin="242,44,0,0" Style="{StaticResource FlatButtonStyle}" Click="btnTogglePolling_Click" FontSize="14" Height="26" VerticalAlignment="Top" Background="Transparent" Foreground="Black" Focusable="False" SnapsToDevicePixels="True"/>

            <!-- ProgressBar/Titlebar -->
            <ProgressBar x:Name="progressBar" FontSize="14" Height="34" VerticalAlignment="Top" Background="{StaticResource AccentColor}" Foreground="#FF23FF00" Style="{StaticResource FlatProgressBarStyle}" Margin="0,0,0,0" BorderBrush="{StaticResource AccentColor}" BorderThickness="0" ValueChanged="progressBar_ValueChanged" />

            <!-- Title -->
            <Label SnapsToDevicePixels="True" Content="Pingo" HorizontalAlignment="Left" Margin="10,0,0,0" VerticalAlignment="Top" FontSize="18"/>

            <!-- Window buttons -->
            <Button x:Name="btnExit" Style="{StaticResource ExitButtonStyle}" WindowChrome.IsHitTestVisibleInChrome="True" Background="Transparent" BorderBrush="Transparent" Click="btnExit_Click" FontSize="14" HorizontalAlignment="Right" Width="30" Height="34" VerticalAlignment="Top" Focusable="False" Margin="0,0,0,0">
                <Path Data="M0,0 L1,1 M0,1 L1,0" Stretch="Fill" SnapsToDevicePixels="True" Stroke="Black" StrokeThickness="2.5" Width="12" Height="12" />
            </Button>

            <Button x:Name="btnMinimize" WindowChrome.IsHitTestVisibleInChrome="True" Style="{StaticResource FlatButtonStyle}" Background="Transparent" BorderBrush="Transparent" Click="btnMinimize_Click" FontSize="14" HorizontalAlignment="Right" Width="30" Height="34" VerticalAlignment="Top" Margin="0,0,63,0" Focusable="False">
                <Rectangle SnapsToDevicePixels="True" Fill="Black" Margin="0,8,0,0" Height="3" Width="10" RenderOptions.EdgeMode="Aliased"/>
            </Button>

            <Button x:Name="btnMaximize" WindowChrome.IsHitTestVisibleInChrome="True" Style="{StaticResource FlatButtonStyle}" Background="Transparent" BorderBrush="Transparent" Click="btnMaximize_Click"  FontSize="14" HorizontalAlignment="Right" Width="31" Height="34" VerticalAlignment="Top" Margin="0,0,32,0" Focusable="False">
                <TextBlock>
                	<Path SnapsToDevicePixels="True" Width="12" Height="10" Stretch="Fill" Fill="#FF000000" Data="F1 M 18,23L 58,23L 58,53L 18,53L 18,23 Z M 54,31L 22,31L 22,49L 54,49L 54,31 Z "/>
                </TextBlock>
            </Button>
        </Grid>
    </Border>
</Window>