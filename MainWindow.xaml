<Window
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:Themes="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Classic" mc:Ignorable="d" x:Class="Pingo.MainWindow"
        Title="Pingo - Idle" MinHeight="429" MinWidth="650" Height="429" Width="650" Icon="icon.ico" Loaded="MainWindow_Loaded" WindowStyle="None" ResizeMode="CanResizeWithGrip" AllowsTransparency="True" MouseLeftButtonDown="Window_MouseLeftButtonDown" BorderThickness="2">

    <Window.Resources>
        <Style x:Key="ProgressBarStyle1" TargetType="{x:Type ProgressBar}">
            <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
            <Setter Property="BorderBrush" Value="#00000000"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ProgressBar}">
                        <Themes:ClassicBorderDecorator x:Name="TemplateRoot" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" BorderStyle="ThinPressed" Background="{TemplateBinding Background}">
                            <DockPanel x:Name="PART_Track" LastChildFill="False" Margin="0,0,2,2">
                                <Rectangle x:Name="PART_Indicator" Width="192" Fill="#FF00FD2E" RenderTransformOrigin="0.5,0.5"/>
                            </DockPanel>
                        </Themes:ClassicBorderDecorator>
                        <ControlTemplate.Triggers>
                            <Trigger Property="Orientation" Value="Vertical">
                                <Setter Property="LayoutTransform" TargetName="TemplateRoot">
                                    <Setter.Value>
                                        <RotateTransform Angle="-90"/>
                                    </Setter.Value>
                                </Setter>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="ButtonStyle1" TargetType="{x:Type Button}">
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="Padding" Value="2"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="BorderBrush" Value="Transparent"/>
            <Setter Property="HorizontalAlignment" Value="Center"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="Bd" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}" SnapsToDevicePixels="True">
                            <ContentPresenter ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="BorderBrush" TargetName="Bd" Value="#FFE6E6E6"/>
                                <Setter Property="Background" TargetName="Bd" Value="#FFE6E6E6"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter Property="BorderBrush" TargetName="Bd" Value="#FFC1C1C1"/>
                                <Setter Property="Background" TargetName="Bd" Value="#FFC1C1C1"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="RepeatButtonStyle1" TargetType="{x:Type RepeatButton}">
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="Padding" Value="2"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="BorderBrush" Value="Transparent"/>
            <Setter Property="HorizontalAlignment" Value="Center"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type RepeatButton}">
                        <Border x:Name="Bd" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}" SnapsToDevicePixels="True">
                            <ContentPresenter ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="ButtonStyleExit" TargetType="{x:Type Button}">
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="Padding" Value="2"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="BorderBrush" Value="Transparent"/>
            <Setter Property="HorizontalAlignment" Value="Center"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="Bd" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}" SnapsToDevicePixels="True">
                            <ContentPresenter ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="BorderBrush" TargetName="Bd" Value="#FFFF2525"/>
                                <Setter Property="Background" TargetName="Bd" Value="#FFFF2525"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter Property="BorderBrush" TargetName="Bd" Value="#FFD30000"/>
                                <Setter Property="Background" TargetName="Bd" Value="#FFD30000"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="ButtonStyleEnter" TargetType="{x:Type Button}">
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="Padding" Value="2"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="BorderBrush" Value="Transparent"/>
            <Setter Property="HorizontalAlignment" Value="Center"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="Bd" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}" SnapsToDevicePixels="True">
                            <ContentPresenter ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="BorderBrush" TargetName="Bd" Value="#FF00FD2E"/>
                                <Setter Property="Background" TargetName="Bd" Value="#FF00FD2E"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter Property="BorderBrush" TargetName="Bd" Value="#FF00BF23"/>
                                <Setter Property="Background" TargetName="Bd" Value="#FF00BF23"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <SolidColorBrush x:Key="ListBox.Static.Background" Color="#FFFFFFFF" />
        <SolidColorBrush x:Key="ListBox.Static.Border" Color="#FFABADB3" />
        <SolidColorBrush x:Key="ListBox.MouseOver.Background" Color="#FFFFFFFF" />
        <SolidColorBrush x:Key="ListBox.MouseOver.Border" Color="#FF7EB4EA" />
        <SolidColorBrush x:Key="ListBox.Disabled.Background" Color="#FFFFFFFF" />
        <SolidColorBrush x:Key="ListBox.Disabled.Border" Color="#FFD9D9D9" />
        <SolidColorBrush x:Key="gray1" Color="#FFE6E6E6" />
        <SolidColorBrush x:Key="gray2" Color="#FFE6E6E6" />
        <SolidColorBrush x:Key="gray3" Color="#FFF7F7F7" />

        <Style x:Key="{x:Type ListBox}" TargetType="{x:Type ListBox}">
            <Setter Property="Background" Value="{StaticResource ListBox.Static.Background}"/>
            <Setter Property="BorderBrush" Value="{StaticResource ListBox.Static.Border}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
            <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
            <Setter Property="ScrollViewer.CanContentScroll" Value="true"/>
            <Setter Property="ScrollViewer.PanningMode" Value="Both"/>
            <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ListBox}">
                        <Border Name="Bd"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            SnapsToDevicePixels="true"
                            Padding="1">
                            <ScrollViewer Padding="{TemplateBinding Padding}"
                                      Focusable="false">
                                <ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                            </ScrollViewer>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter TargetName="Bd" Property="Background" Value="{StaticResource ListBox.Disabled.Background}" />
                                <Setter TargetName="Bd" Property="BorderBrush" Value="{StaticResource ListBox.Disabled.Border}" />
                            </Trigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsGrouping" Value="true" />
                                    <Condition Property="VirtualizingPanel.IsVirtualizingWhenGrouping" Value="false" />
                                </MultiTrigger.Conditions>
                                <Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
                            </MultiTrigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </Window.Resources>

    <Window.TaskbarItemInfo>
        <TaskbarItemInfo ProgressValue="0" ProgressState="None"/>
    </Window.TaskbarItemInfo>

    <WindowChrome.WindowChrome >
        <WindowChrome CaptionHeight="34"
                            GlassFrameThickness="0,0,0,5"
                            ResizeBorderThickness="5"/>
    </WindowChrome.WindowChrome>

    <Border>
        <Border.Effect>
            <DropShadowEffect BlurRadius="5" Color="Black" Opacity="0.8" ShadowDepth="0.5" />
        </Border.Effect>

        <Grid Background="White">

            <Rectangle Fill="#FFF7F7F7" HorizontalAlignment="Right" Width="93"/>

            <ListView x:Name="lsvOutput" Margin="10,79,104,77" FontSize="14" MouseDoubleClick="lsvOutput_MouseDoubleClick" SelectionMode="Single" Background="#FFF7F7F7" Foreground="Black" BorderThickness="0">
                <ListView.Resources>
                    <Style TargetType="{x:Type GridViewColumnHeader}">
                        <Setter Property="HorizontalContentAlignment" Value="Left" />
                        <Setter Property="BorderBrush" Value="#FFF7F7F7" />
                        <Setter Property="Background" Value="#FFF7F7F7" />
                    </Style>
                    <Style TargetType="{x:Type ScrollBar}">
                        <Setter Property="Foreground" Value="{StaticResource gray1}" />
                        <Setter Property="Background" Value="{StaticResource gray3}" />
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="{x:Type ScrollBar}">
                                    <Grid x:Name="GridRoot" Width="19" Background="{TemplateBinding Background}">
                                        <Grid.RowDefinitions>
                                            <RowDefinition Height="0.00001*" />
                                        </Grid.RowDefinitions>

                                        <Track x:Name="PART_Track" Grid.Row="0" IsDirectionReversed="true" Focusable="false">
                                            <Track.Thumb>
                                                <Thumb x:Name="Thumb" Background="{TemplateBinding Foreground}" Style="{DynamicResource ScrollThumbs}" />
                                            </Track.Thumb>
                                            <Track.IncreaseRepeatButton>
                                                <RepeatButton x:Name="PageUp" Command="ScrollBar.PageDownCommand" Opacity="0" Focusable="false" />
                                            </Track.IncreaseRepeatButton>
                                            <Track.DecreaseRepeatButton>
                                                <RepeatButton x:Name="PageDown" Command="ScrollBar.PageUpCommand" Opacity="0" Focusable="false" />
                                            </Track.DecreaseRepeatButton>
                                        </Track>
                                    </Grid>

                                    <ControlTemplate.Triggers>
                                        <Trigger SourceName="Thumb" Property="IsMouseOver" Value="true">
                                            <Setter Value="{DynamicResource ButtonSelectBrush}" TargetName="Thumb" Property="Background" />
                                        </Trigger>
                                        <Trigger SourceName="Thumb" Property="IsDragging" Value="true">
                                            <Setter Value="{DynamicResource DarkBrush}" TargetName="Thumb" Property="Background" />
                                        </Trigger>
                                        <Trigger Property="Name" Value="PART_VerticalScrollBar">
                                            <Setter Property="Margin" Value="0,26,0,0"/>
                                        </Trigger>
                                        <Trigger Property="IsEnabled" Value="false">
                                            <Setter TargetName="Thumb" Property="Visibility" Value="Collapsed" />
                                        </Trigger>
                                        <Trigger Property="Orientation" Value="Horizontal">
                                            <Setter TargetName="GridRoot" Property="LayoutTransform">
                                                <Setter.Value>
                                                    <RotateTransform Angle="-90" />
                                                </Setter.Value>
                                            </Setter>
                                            <Setter TargetName="PART_Track" Property="LayoutTransform">
                                                <Setter.Value>
                                                    <RotateTransform Angle="-90" />
                                                </Setter.Value>
                                            </Setter>
                                            <Setter Property="Width" Value="Auto" />
                                            <Setter Property="Height" Value="12" />
                                            <Setter TargetName="Thumb" Property="Tag" Value="Horizontal" />
                                            <Setter TargetName="PageDown" Property="Command" Value="ScrollBar.PageLeftCommand" />
                                            <Setter TargetName="PageUp" Property="Command" Value="ScrollBar.PageRightCommand" />
                                        </Trigger>
                                    </ControlTemplate.Triggers>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>
                    <Style TargetType="{x:Type Thumb}">
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="{x:Type Thumb}">
                                    <Grid x:Name="Grid">
                                        <Rectangle HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Width="Auto" Height="Auto" Fill="Transparent" />
                                        <Border x:Name="Rectangle1" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Width="Auto" Height="Auto"  Background="{TemplateBinding Background}" />
                                    </Grid>
                                    <ControlTemplate.Triggers>
                                        <Trigger Property="Tag" Value="Horizontal">
                                            <Setter TargetName="Rectangle1" Property="Width" Value="Auto" />
                                            <Setter TargetName="Rectangle1" Property="Height" Value="7" />
                                        </Trigger>
                                    </ControlTemplate.Triggers>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>
                </ListView.Resources>
                <ListView.View>
                    <GridView>
                        <GridViewColumn Header="Hostname" DisplayMemberBinding="{Binding Hostname}"/>
                        <GridViewColumn Header="Status" DisplayMemberBinding="{Binding Status}"/>
                        <GridViewColumn Header="Last updated" DisplayMemberBinding="{Binding Timestamp}"/>
                    </GridView>
                </ListView.View>
                <ListView.ItemContainerStyle>
                    <Style>
                        <Setter Property="ListView.Margin" Value="0"/>
                        <Setter Property="ListView.Padding" Value="0"/>
                        <Setter Property="ListView.BorderThickness" Value="1"/>
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding Status}" Value="Online">
                                <Setter Property="ListView.Background" Value="#FF00FD2E"/>
                            </DataTrigger>
                            <DataTrigger Binding="{Binding Status}" Value="Offline">
                                <Setter Property="ListView.Background" Value="#FFFF2525"/>
                            </DataTrigger>
                            <DataTrigger Binding="{Binding Status}" Value="Error">
                                <Setter Property="ListView.Background" Value="#FF8B8989"/>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </ListView.ItemContainerStyle>
            </ListView>

            <TextBox x:Name="txtInput" SelectionBrush="#FFC1C1C1" BorderThickness="0" TextWrapping="Wrap" Text="Enter a hostname or IP" VerticalAlignment="Bottom" Margin="10,0,104,10" Height="53" AcceptsReturn="True" FontSize="14" Background="#FFF7F7F7" Foreground="Black" />

            <Button x:Name="btnEnter" VerticalAlignment="Bottom" Height="61" Click="btnEnter_Click" IsDefault="True" FontSize="14" HorizontalAlignment="Right" Width="91" Background="#FFF7F7F7" Foreground="Black" Style="{DynamicResource ButtonStyleEnter}" Focusable="False" Margin="0,0,2,2">
                <TextBlock TextWrapping="Wrap" TextAlignment="Center"><Run Text="Enter"/></TextBlock>
            </Button>
            <Button x:Name="btnRefreshAll" Style="{DynamicResource ButtonStyle1}" Margin="0,0,2,236" Click="btnRefreshAll_Click" FontSize="14" HorizontalAlignment="Right" Width="91" Height="55" VerticalAlignment="Bottom" Background="#FFF7F7F7" Foreground="Black" Focusable="False">
                <TextBlock TextWrapping="Wrap" TextAlignment="Center"><Run Text="Refresh All"/></TextBlock>
            </Button>
            <Button x:Name="btnRefreshSelected" Focusable="False" Style="{DynamicResource ButtonStyle1}" Margin="0,0,2,291" Click="btnRefreshSelection_Click" FontSize="14" HorizontalAlignment="Right" Width="91" Height="55" VerticalAlignment="Bottom" Background="#FFF7F7F7" Foreground="Black">
                <TextBlock TextWrapping="Wrap" TextAlignment="Center"><Run Text="Refresh Selection"/></TextBlock>
            </Button>
            <Button x:Name="btnExport" VerticalAlignment="Bottom" Margin="0,0,2,77" Height="53" Style="{DynamicResource ButtonStyle1}" FontSize="14" Click="btnExport_Click" HorizontalAlignment="Right" Width="91" Background="#FFF7F7F7" Foreground="Black" Focusable="False">
                <TextBlock TextWrapping="Wrap" TextAlignment="Center"><Run Text="Export to CSV"/></TextBlock>
            </Button>
            <Button x:Name="btnDeleteSelected" Style="{DynamicResource ButtonStyle1}" VerticalAlignment="Bottom" Margin="0,0,2,184" Height="52" Click="btnDeleteSelection_Click" FontSize="14" HorizontalAlignment="Right" Width="91" Background="#FFF7F7F7" Foreground="Black" Focusable="False">
                <TextBlock TextWrapping="Wrap" TextAlignment="Center"><Run Text="Delete Selection"/></TextBlock>
            </Button>
            <Button x:Name="btnDeleteAll" Style="{DynamicResource ButtonStyle1}" VerticalAlignment="Bottom" Margin="0,0,2,130" Height="54" Click="btnClear_Click" FontSize="14" HorizontalAlignment="Right" Width="91" Background="#FFF7F7F7" Foreground="Black" Focusable="False">
                <TextBlock TextWrapping="Wrap" TextAlignment="Center"><Run Text="Delete All"/></TextBlock>
            </Button>

            <Label Content="Polling interval in minutes:" HorizontalAlignment="Left" Margin="10,43,0,0" FontSize="14" Height="29" VerticalAlignment="Top"/>
            <TextBox x:Name="txtInterval" Focusable="False" HorizontalAlignment="Left" BorderThickness="0" Margin="190,47,0,0" TextWrapping="Wrap" Text="10" Width="30" TextChanged="txtInterval_TextChanged" IsReadOnly="True" FontSize="14" Height="26" VerticalAlignment="Top" Background="{x:Null}" Foreground="Black" Cursor="Arrow"/>
            <Button x:Name="btnTogglePolling" Content="Disable Polling" HorizontalAlignment="Left" Width="125" Margin="242,44,0,0" Style="{DynamicResource ButtonStyle1}" Click="btnTogglePolling_Click" FontSize="14" Height="26" VerticalAlignment="Top" Background="{x:Null}" Foreground="Black" Focusable="False"/>
            <Label x:Name="lblNextUpdate" Content="Next update in" HorizontalAlignment="Left" RenderTransformOrigin="0.864,0.952" Margin="372,43,0,0" FontSize="14" Height="29" VerticalAlignment="Top"/>

            <RepeatButton x:Name="btnMinus" Style="{StaticResource RepeatButtonStyle1}" Content="&#xE011;" FontFamily="Segoe UI Symbol" FontSize="10" HorizontalAlignment="Left" Width="15" Margin="209,52,0,0" Click="btnMinus_Click" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" Height="16" VerticalAlignment="Top" BorderBrush="{x:Null}" Background="{x:Null}" Focusable="False"/>
            <RepeatButton x:Name="btnPlus" Style="{StaticResource RepeatButtonStyle1}" Content="&#xE010;" FontFamily="Segoe UI Symbol" FontSize="10" HorizontalAlignment="Left" Width="15" Margin="209,42,0,0" Click="btnPlus_Click" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" Height="16" VerticalAlignment="Top" BorderBrush="{x:Null}" Background="{x:Null}" Focusable="False"/>

            <ProgressBar x:Name="progressBar" FontSize="14" Height="34" VerticalAlignment="Top" Background="#FFF7F7F7" BorderBrush="#FFF7F7F7" Foreground="#FF23FF00" Style="{DynamicResource ProgressBarStyle1}"/>
            <Label Content="Pingo" HorizontalAlignment="Left" Margin="10,0,0,0" VerticalAlignment="Top" FontSize="18"/>
            <Button x:Name="btnExit" Style="{DynamicResource ButtonStyleExit}" WindowChrome.IsHitTestVisibleInChrome="True" Background="{x:Null}" BorderBrush="{x:Null}" Click="btnExit_Click" FontSize="14" HorizontalAlignment="Right" Width="30" Height="30" VerticalAlignment="Top" Focusable="False" Margin="0,2,2,0">
                <TextBlock Text="&#xE10A;" FontFamily="Segoe UI Symbol"/>
            </Button>
            <Button x:Name="btnMinimize" WindowChrome.IsHitTestVisibleInChrome="True" Style="{DynamicResource ButtonStyle1}" Background="{x:Null}" BorderBrush="{x:Null}" Click="btnMinimize_Click" FontSize="14" HorizontalAlignment="Right" Width="30" Height="30" VerticalAlignment="Top" Margin="0,2,62,0" Focusable="False">
                <Rectangle Fill="Black" Margin="0,8,0,0" Height="3" Width="10" RenderOptions.EdgeMode="Aliased"/>
            </Button>
            <Button x:Name="btnMaximize" WindowChrome.IsHitTestVisibleInChrome="True" Style="{DynamicResource ButtonStyle1}" Background="{x:Null}" BorderBrush="{x:Null}" Click="btnMaximize_Click"  FontSize="14" HorizontalAlignment="Right" Width="30" Height="30" VerticalAlignment="Top" Margin="0,2,32,0" Focusable="False">
                <TextBlock>
                	<Path Width="12" Height="10" Stretch="Fill" Fill="#FF000000" Data="F1 M 18,23L 58,23L 58,53L 18,53L 18,23 Z M 54,31L 22,31L 22,49L 54,49L 54,31 Z "/>
                </TextBlock>
            </Button>

        </Grid>
    </Border>
</Window>